name: Build and Publish Ansible Collection

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'
  ANSIBLE_VERSION: 'latest'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Ansible
      run: |
        python -m pip install --upgrade pip
        pip install ansible

    - name: Validate collection structure
      run: |
        if [ ! -f galaxy.yml ]; then
          echo "Error: galaxy.yml not found"
          exit 1
        fi
        echo "Collection structure validation passed"

    - name: Build collection (dry run for PRs)
      if: github.event_name == 'pull_request'
      run: |
        ansible-galaxy collection build . --force
        echo "Build test completed successfully"

    - name: Run collection sanity tests
      if: github.event_name == 'pull_request'
      run: |
        # Install the built collection for testing
        ansible-galaxy collection install ./*.tar.gz --force
        # Add any additional sanity tests here
        echo "Sanity tests completed"

  publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Ansible
      run: |
        python -m pip install --upgrade pip
        pip install ansible

    - name: Make script executable
      run: chmod +x ./build-and-publish.sh

    - name: Build and publish collection
      env:
        ANSIBLE_GALAXY_TOKEN: ${{ secrets.ANSIBLE_GALAXY_TOKEN }}
      run: ./build-and-publish.sh

    - name: Upload collection artifact
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: ansible-collection-logs
        path: |
          *.log
          *.tar.gz
        retention-days: 30

  release:
    needs: publish
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          Ansible Collection Release ${{ github.ref_name }}
          
          This release has been automatically published to Ansible Galaxy.
        draft: false
        prerelease: false